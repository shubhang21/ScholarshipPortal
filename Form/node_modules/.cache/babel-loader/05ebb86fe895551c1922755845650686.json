{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { UploadFileStatus } from '../interfaces/UploadFileStatus';\n\nvar copyState = function (state) {\n  return (state || []).map(function (file) {\n    return __assign({}, file);\n  });\n};\n\nvar add = function (file, filesState) {\n  filesState.push(file);\n};\n\nvar addMany = function (fileList, filesState) {\n  fileList.forEach(function (file) {\n    return add(file, filesState);\n  });\n};\n\nvar groupFilesByUid = function (files) {\n  var fileGroup = {};\n  files.forEach(function (file) {\n    if (fileGroup[file.uid]) {\n      fileGroup[file.uid].push(file);\n    } else {\n      fileGroup[file.uid] = [file];\n    }\n  });\n  return fileGroup;\n};\n\nvar filesForUpload = function (files) {\n  var notUploadedGroups = {};\n  groupForEach(files, function (currentFiles, uid) {\n    var currentFilesValid = true;\n    currentFiles.forEach(function (file) {\n      if (file.status !== UploadFileStatus.Selected || file.validationErrors && file.validationErrors.length > 0) {\n        currentFilesValid = false;\n      }\n    });\n\n    if (currentFilesValid) {\n      notUploadedGroups[uid] = currentFiles;\n    }\n  });\n  return notUploadedGroups;\n};\n\nvar setFilesStatus = function (filesGroup, status) {\n  groupForEach(filesGroup, function (currentFiles) {\n    currentFiles.forEach(function (file) {\n      file.status = status;\n    });\n  });\n};\n\nvar flatFileGroup = function (fileGroup) {\n  var transformed = [];\n  groupForEach(fileGroup, function (currentFiles) {\n    transformed.push.apply(transformed, currentFiles);\n  });\n  return transformed;\n};\n\nvar groupForEach = function (fileGroup, callBack) {\n  Object.keys(fileGroup).forEach(function (uidKey) {\n    callBack(fileGroup[uidKey], uidKey);\n  });\n};\n\nexport default {\n  copyState: copyState,\n  addMany: addMany,\n  add: add,\n  groupFilesByUid: groupFilesByUid,\n  filesForUpload: filesForUpload,\n  setFilesStatus: setFilesStatus,\n  flatFileGroup: flatFileGroup,\n  groupForEach: groupForEach\n};","map":{"version":3,"sources":["../../../src/utils/stateUtils.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { UploadFileStatus } from '../interfaces/UploadFileStatus';\nvar copyState = function (state) {\n    return (state || []).map(function (file) {\n        return __assign({}, file);\n    });\n};\nvar add = function (file, filesState) {\n    filesState.push(file);\n};\nvar addMany = function (fileList, filesState) {\n    fileList.forEach(function (file) { return add(file, filesState); });\n};\nvar groupFilesByUid = function (files) {\n    var fileGroup = {};\n    files.forEach(function (file) {\n        if (fileGroup[file.uid]) {\n            fileGroup[file.uid].push(file);\n        }\n        else {\n            fileGroup[file.uid] = [file];\n        }\n    });\n    return fileGroup;\n};\nvar filesForUpload = function (files) {\n    var notUploadedGroups = {};\n    groupForEach(files, function (currentFiles, uid) {\n        var currentFilesValid = true;\n        currentFiles.forEach(function (file) {\n            if (file.status !== UploadFileStatus.Selected ||\n                (file.validationErrors && file.validationErrors.length > 0)) {\n                currentFilesValid = false;\n            }\n        });\n        if (currentFilesValid) {\n            notUploadedGroups[uid] = currentFiles;\n        }\n    });\n    return notUploadedGroups;\n};\nvar setFilesStatus = function (filesGroup, status) {\n    groupForEach(filesGroup, function (currentFiles) {\n        currentFiles.forEach(function (file) {\n            file.status = status;\n        });\n    });\n};\nvar flatFileGroup = function (fileGroup) {\n    var transformed = [];\n    groupForEach(fileGroup, function (currentFiles) {\n        transformed.push.apply(transformed, currentFiles);\n    });\n    return transformed;\n};\nvar groupForEach = function (fileGroup, callBack) {\n    Object.keys(fileGroup).forEach(function (uidKey) {\n        callBack(fileGroup[uidKey], uidKey);\n    });\n};\nexport default {\n    copyState: copyState,\n    addMany: addMany,\n    add: add,\n    groupFilesByUid: groupFilesByUid,\n    filesForUpload: filesForUpload,\n    setFilesStatus: setFilesStatus,\n    flatFileGroup: flatFileGroup,\n    groupForEach: groupForEach\n};\n//# sourceMappingURL=stateUtils.js.map"]},"metadata":{},"sourceType":"module"}