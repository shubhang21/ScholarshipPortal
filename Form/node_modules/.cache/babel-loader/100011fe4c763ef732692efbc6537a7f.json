{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  return t;\n};\n\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { getTabIndex } from '@progress/kendo-react-common';\nimport { UploadFileStatus } from './interfaces/UploadFileStatus';\nimport { UploadNavigation } from './UploadNavigation';\nimport axios from 'axios';\nimport utils from './utils/utils';\nimport stateUtils from './utils/stateUtils';\nimport connectionUtils from './utils/connectionUtils';\nimport validationUtils from './utils/validationUtils';\nimport { validatePackage } from '@progress/kendo-licensing';\nimport { packageMetadata } from './package-metadata';\n\nvar Upload =\n/** @class */\nfunction (_super) {\n  __extends(Upload, _super);\n\n  function Upload(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._httpSubscriptions = {};\n    /**\n     * @hidden\n     */\n\n    _this.focus = function () {\n      if (_this._uploadNavigation) {\n        _this._uploadNavigation.focus();\n      }\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.uploadFiles = function (filesForUpload) {\n      var async = _this.async;\n      stateUtils.setFilesStatus(filesForUpload, UploadFileStatus.Uploading);\n      stateUtils.groupForEach(filesForUpload, function (currentFiles, uid) {\n        var headers = connectionUtils.cloneRequestHeaders(async.saveHeaders || {});\n        var additionalData = {};\n        var eventData = {\n          target: _this,\n          files: currentFiles,\n          headers: headers,\n          additionalData: additionalData\n        };\n\n        if (_this.props.onBeforeUpload) {\n          _this.props.onBeforeUpload.call(undefined, eventData);\n        }\n\n        var requestOptions = connectionUtils.populateRequestOptions(eventData.headers, _this.async);\n        var formData = connectionUtils.populateUploadFormData(currentFiles, async.saveField, eventData.additionalData);\n\n        if (_this.isCustomSave) {\n          _this.props.saveUrl(currentFiles, {\n            formData: formData,\n            requestOptions: requestOptions\n          }, _this.onUploadProgress).then(function (event) {\n            return _this.onUploadSuccess(event.uid);\n          }).catch(function (event) {\n            return _this.onUploadError(event.uid);\n          });\n        } else {\n          var cancelTokenSource = axios.CancelToken.source();\n          _this._httpSubscriptions[uid] = cancelTokenSource;\n          axios(__assign({\n            method: async.saveMethod,\n            url: async.saveUrl,\n            data: formData,\n            cancelToken: cancelTokenSource.token\n          }, requestOptions, {\n            onUploadProgress: function (event) {\n              return _this.onUploadProgress(uid, event);\n            }\n          })).then(function (event) {\n            return _this.onUploadSuccess(uid, event);\n          }).catch(function (event) {\n            return _this.onUploadError(uid, event);\n          });\n        }\n      });\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.removeFiles = function (filesForRemove) {\n      var async = _this.async;\n      stateUtils.groupForEach(filesForRemove, function (currentFiles, uid) {\n        var headers = connectionUtils.cloneRequestHeaders(async.removeHeaders || {});\n        var additionalData = {};\n        var eventData = {\n          target: _this,\n          files: currentFiles,\n          headers: headers,\n          additionalData: additionalData\n        };\n\n        if (_this.props.onBeforeRemove) {\n          _this.props.onBeforeRemove.call(undefined, eventData);\n        }\n\n        var fileNames = currentFiles.map(function (file) {\n          return file.name;\n        });\n        var requestOptions = connectionUtils.populateRequestOptions(eventData.headers, _this.async);\n        var formData = connectionUtils.populateRemoveFormData(fileNames, async.removeField, eventData.additionalData);\n\n        if (_this.isCustomRemove) {\n          _this.props.removeUrl(currentFiles, {\n            formData: formData,\n            requestOptions: requestOptions\n          }).then(function (event) {\n            return _this.onRemoveSuccess(event.uid);\n          }).catch(function (event) {\n            return _this.onRemoveError(event.uid);\n          });\n        } else {\n          axios(__assign({\n            method: async.removeMethod,\n            url: async.removeUrl,\n            data: formData\n          }, requestOptions)).then(function (event) {\n            return _this.onRemoveSuccess(uid, event);\n          }).catch(function (event) {\n            return _this.onRemoveError(uid, event);\n          });\n        }\n      });\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.onUpload = function () {\n      var newState = _this.fileStateCopy;\n      var groupedFiles = stateUtils.groupFilesByUid(newState);\n      var filesForUpload = stateUtils.filesForUpload(groupedFiles);\n\n      _this.uploadFiles(filesForUpload);\n\n      var onStatusChangeEvent = function () {\n        if (_this.props.onStatusChange) {\n          var eventData = {\n            target: _this,\n            newState: newState,\n            affectedFiles: stateUtils.flatFileGroup(filesForUpload)\n          };\n\n          _this.props.onStatusChange.call(undefined, eventData);\n        }\n      };\n\n      if (_this.isControlled) {\n        onStatusChangeEvent();\n      } else {\n        _this.setState({\n          files: newState\n        }, onStatusChangeEvent);\n      }\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.onAdd = function (files) {\n      // The problem when removing rawFile is that there is no reliable way of preserving it internally.\n      // For example, uid + filename - the filename can be changed at any moment.\n      var selectedFiles = utils.getAllFileInfo(files);\n      var newState;\n      selectedFiles = utils.assignGuidToFiles(selectedFiles, _this.async.batch);\n      validationUtils.validateFiles(selectedFiles, _this.props.restrictions);\n\n      if (!_this.props.multiple) {\n        newState = [];\n      } else {\n        newState = _this.fileStateCopy;\n      }\n\n      stateUtils.addMany(selectedFiles, newState);\n\n      if (_this.async.autoUpload) {\n        var groupedFiles = stateUtils.groupFilesByUid(newState);\n\n        _this.uploadFiles(stateUtils.filesForUpload(groupedFiles));\n      }\n\n      var onAddEvent = function () {\n        if (_this.props.onAdd) {\n          var eventData = {\n            target: _this,\n            newState: newState,\n            affectedFiles: selectedFiles\n          };\n\n          _this.props.onAdd.call(undefined, eventData);\n        }\n      };\n\n      if (_this.isControlled) {\n        onAddEvent();\n      } else {\n        _this.setState({\n          files: newState\n        }, onAddEvent);\n      }\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.onUploadProgress = function (uid, event) {\n      var percentComplete = Math.round(100 * event.loaded / event.total) || 0;\n      var newState = _this.fileStateCopy;\n      var filesWithProgress = newState.filter(function (file) {\n        return file.uid === uid;\n      });\n\n      if (!filesWithProgress.length) {\n        return;\n      }\n\n      filesWithProgress.forEach(function (file) {\n        file.progress = percentComplete;\n      });\n\n      var onProgressEvent = function () {\n        if (_this.props.onProgress) {\n          var eventData = {\n            target: _this,\n            newState: newState,\n            affectedFiles: filesWithProgress\n          };\n\n          _this.props.onProgress.call(undefined, eventData);\n        }\n      };\n\n      if (_this.isControlled) {\n        onProgressEvent();\n      } else {\n        _this.setState({\n          files: newState\n        }, onProgressEvent);\n      }\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.onUploadSuccess = function (uid, event) {\n      var newState = _this.fileStateCopy;\n      var successFiles = newState.filter(function (file) {\n        return file.uid === uid;\n      });\n      successFiles.forEach(function (file) {\n        file.status = UploadFileStatus.Uploaded;\n      });\n      delete _this._httpSubscriptions[uid];\n\n      var onStatusChangeEvent = function () {\n        if (_this.props.onStatusChange) {\n          var eventData = {\n            target: _this,\n            newState: newState,\n            affectedFiles: successFiles,\n            response: event ? connectionUtils.convertAxiosResponse(event) : undefined\n          };\n\n          _this.props.onStatusChange.call(undefined, eventData);\n        }\n      };\n\n      if (_this.isControlled) {\n        onStatusChangeEvent();\n      } else {\n        _this.setState({\n          files: newState\n        }, onStatusChangeEvent);\n      }\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.onUploadError = function (uid, event) {\n      var newState = _this.fileStateCopy;\n      var failedFiles = newState.filter(function (file) {\n        return file.uid === uid;\n      });\n      failedFiles.forEach(function (file) {\n        file.status = UploadFileStatus.UploadFailed;\n      });\n      delete _this._httpSubscriptions[uid];\n\n      if (!failedFiles.length) {\n        return;\n      }\n\n      var onStatusChangeEvent = function () {\n        if (_this.props.onStatusChange) {\n          var eventData = {\n            target: _this,\n            newState: newState,\n            affectedFiles: failedFiles,\n            response: event ? connectionUtils.convertAxiosResponse(event) : undefined\n          };\n\n          _this.props.onStatusChange.call(undefined, eventData);\n        }\n      };\n\n      if (_this.isControlled) {\n        onStatusChangeEvent();\n      } else {\n        _this.setState({\n          files: newState\n        }, onStatusChangeEvent);\n      }\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.onRemove = function (uid) {\n      var _a;\n\n      var newState = _this.fileStateCopy;\n      var filesForRemove = newState.filter(function (file) {\n        return file.uid === uid;\n      });\n      var filesToKeep = newState.filter(function (file) {\n        return file.uid !== uid;\n      });\n      var remoteRemoveStatuses = [UploadFileStatus.Uploaded, UploadFileStatus.Initial, UploadFileStatus.RemoveFailed];\n\n      if (remoteRemoveStatuses.indexOf(filesForRemove[0].status) > -1) {\n        var fileGroup = (_a = {}, _a[uid] = filesForRemove, _a);\n        stateUtils.setFilesStatus(fileGroup, UploadFileStatus.Removing);\n\n        _this.removeFiles(fileGroup);\n\n        var onStatusChangeEvent = function () {\n          if (_this.props.onStatusChange) {\n            var eventData = {\n              target: _this,\n              newState: newState,\n              affectedFiles: filesForRemove\n            };\n\n            _this.props.onStatusChange.call(undefined, eventData);\n          }\n        };\n\n        if (_this.isControlled) {\n          onStatusChangeEvent();\n        } else {\n          _this.setState({\n            files: newState\n          }, onStatusChangeEvent);\n        }\n      } else {\n        var onRemoveEvent = function () {\n          if (_this.props.onRemove) {\n            var eventData = {\n              target: _this,\n              newState: filesToKeep,\n              affectedFiles: filesForRemove\n            };\n\n            _this.props.onRemove.call(undefined, eventData);\n          }\n        };\n\n        if (_this.isControlled) {\n          onRemoveEvent();\n        } else {\n          _this.setState({\n            files: filesToKeep\n          }, onRemoveEvent);\n        }\n      }\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.onRemoveSuccess = function (uid, event) {\n      var newState = _this.fileStateCopy;\n      var filesForRemove = newState.filter(function (file) {\n        return file.uid === uid;\n      });\n      var filesToKeep = newState.filter(function (file) {\n        return file.uid !== uid;\n      });\n\n      var onRemoveEvent = function () {\n        if (_this.props.onRemove) {\n          var eventData = {\n            target: _this,\n            newState: filesToKeep,\n            affectedFiles: filesForRemove,\n            response: event ? connectionUtils.convertAxiosResponse(event) : undefined\n          };\n\n          _this.props.onRemove.call(undefined, eventData);\n        }\n      };\n\n      if (_this.isControlled) {\n        onRemoveEvent();\n      } else {\n        _this.setState({\n          files: filesToKeep\n        }, onRemoveEvent);\n      }\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.onRemoveError = function (uid, event) {\n      var newState = _this.fileStateCopy;\n      var failedFiles = newState.filter(function (file) {\n        return file.uid === uid;\n      });\n      failedFiles.forEach(function (file) {\n        file.status = UploadFileStatus.RemoveFailed;\n      });\n\n      var onStatusChangeEvent = function () {\n        if (_this.props.onStatusChange) {\n          var eventData = {\n            target: _this,\n            newState: newState,\n            affectedFiles: failedFiles,\n            response: event ? connectionUtils.convertAxiosResponse(event) : undefined\n          };\n\n          _this.props.onStatusChange.call(undefined, eventData);\n        }\n      };\n\n      if (_this.isControlled) {\n        onStatusChangeEvent();\n      } else {\n        _this.setState({\n          files: newState\n        }, onStatusChangeEvent);\n      }\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.onRetry = function (uid) {\n      var newState = _this.fileStateCopy;\n      var filesForRetry = stateUtils.groupFilesByUid(newState.filter(function (file) {\n        return file.uid === uid;\n      }));\n      stateUtils.setFilesStatus(filesForRetry, UploadFileStatus.Uploading);\n\n      _this.uploadFiles(filesForRetry);\n\n      var onStatusChangeEvent = function () {\n        if (_this.props.onStatusChange) {\n          var eventData = {\n            target: _this,\n            newState: newState,\n            affectedFiles: stateUtils.flatFileGroup(filesForRetry)\n          };\n\n          _this.props.onStatusChange.call(undefined, eventData);\n        }\n      };\n\n      if (_this.isControlled) {\n        onStatusChangeEvent();\n      } else {\n        _this.setState({\n          files: newState\n        }, onStatusChangeEvent);\n      }\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.onCancel = function (uid) {\n      var newState = _this.fileStateCopy;\n      var filesToKeep = newState.filter(function (file) {\n        return file.uid !== uid;\n      });\n      var filesForRemove = newState.filter(function (file) {\n        return file.uid === uid;\n      });\n\n      if (_this._httpSubscriptions[uid]) {\n        _this._httpSubscriptions[uid].cancel();\n\n        delete _this._httpSubscriptions[uid];\n      }\n\n      if (_this.props.onCancel) {\n        var eventData = {\n          target: _this,\n          uid: uid\n        };\n\n        _this.props.onCancel.call(undefined, eventData);\n      }\n\n      var onRemoveEvent = function () {\n        if (_this.props.onRemove) {\n          var eventData = {\n            target: _this,\n            newState: filesToKeep,\n            affectedFiles: filesForRemove\n          };\n\n          _this.props.onRemove.call(undefined, eventData);\n        }\n      };\n\n      if (_this.isControlled) {\n        onRemoveEvent();\n      } else {\n        _this.setState({\n          files: filesToKeep\n        }, onRemoveEvent);\n      }\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.onClear = function () {\n      if (!_this.files.length) {\n        return;\n      }\n\n      Object.keys(_this._httpSubscriptions).forEach(function (key) {\n        _this._httpSubscriptions[key].cancel();\n      });\n      _this._httpSubscriptions = {};\n\n      var onRemoveEvent = function () {\n        if (_this.props.onRemove) {\n          var eventData = {\n            target: _this,\n            newState: [],\n            affectedFiles: _this.fileStateCopy\n          };\n\n          _this.props.onRemove.call(undefined, eventData);\n        }\n      };\n\n      if (_this.isControlled) {\n        onRemoveEvent();\n      } else {\n        _this.setState({\n          files: []\n        }, onRemoveEvent);\n      }\n    };\n\n    validatePackage(packageMetadata);\n    _this.state = {\n      files: props.defaultFiles || []\n    };\n    return _this;\n  }\n\n  Object.defineProperty(Upload.prototype, \"async\", {\n    get: function () {\n      var _a = this.props,\n          autoUpload = _a.autoUpload,\n          batch = _a.batch,\n          removeField = _a.removeField,\n          removeHeaders = _a.removeHeaders,\n          removeMethod = _a.removeMethod,\n          removeUrl = _a.removeUrl,\n          responseType = _a.responseType,\n          saveField = _a.saveField,\n          saveHeaders = _a.saveHeaders,\n          saveMethod = _a.saveMethod,\n          saveUrl = _a.saveUrl,\n          withCredentials = _a.withCredentials;\n      return {\n        autoUpload: autoUpload,\n        batch: batch,\n        removeField: removeField,\n        removeHeaders: removeHeaders,\n        removeMethod: removeMethod,\n        removeUrl: removeUrl,\n        responseType: responseType,\n        saveField: saveField,\n        saveHeaders: saveHeaders,\n        saveMethod: saveMethod,\n        saveUrl: saveUrl,\n        withCredentials: withCredentials\n      };\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Upload.prototype, \"files\", {\n    get: function () {\n      var files = this.isControlled ? this.props.files : this.state.files;\n      return files || [];\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Upload.prototype, \"isControlled\", {\n    get: function () {\n      return !this.props.defaultFiles;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Upload.prototype, \"isCustomSave\", {\n    get: function () {\n      return this.props.saveUrl && typeof this.props.saveUrl === 'function';\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Upload.prototype, \"isCustomRemove\", {\n    get: function () {\n      return this.props.removeUrl && typeof this.props.removeUrl === 'function';\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Upload.prototype, \"fileStateCopy\", {\n    get: function () {\n      if (this.isControlled) {\n        return stateUtils.copyState(this.props.files);\n      } else {\n        return stateUtils.copyState(this.state.files);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Upload.prototype, \"actionElement\", {\n    /**\n     * @hidden\n     */\n    get: function () {\n      if (this._uploadNavigation) {\n        return this._uploadNavigation.actionElement;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * @hidden\n   */\n\n  Upload.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        showFileList = _a.showFileList,\n        onAdd = _a.onAdd,\n        onRemove = _a.onRemove,\n        onCancel = _a.onCancel,\n        autoUpload = _a.autoUpload,\n        showActionButtons = _a.showActionButtons,\n        actionsLayout = _a.actionsLayout,\n        tabIndex = _a.tabIndex,\n        disabled = _a.disabled,\n        others = __rest(_a, [\"showFileList\", \"onAdd\", \"onRemove\", \"onCancel\", \"autoUpload\", \"showActionButtons\", \"actionsLayout\", \"tabIndex\", \"disabled\"]);\n\n    var groupedFiles = stateUtils.groupFilesByUid(this.files);\n    var filesForUpload = stateUtils.filesForUpload(groupedFiles);\n    return React.createElement(UploadNavigation, __assign({\n      groupedFiles: groupedFiles,\n      className: this.props.className,\n      showFileList: showFileList && !!Object.keys(groupedFiles).length,\n      showActionButtons: showActionButtons && !autoUpload && !!Object.keys(filesForUpload).length,\n      actionsLayout: actionsLayout,\n      autoUpload: autoUpload,\n      disabled: disabled,\n      onAdd: this.onAdd,\n      onRemove: this.onRemove,\n      onClear: this.onClear,\n      onUpload: this.onUpload,\n      onRetry: this.onRetry,\n      onCancel: this.onCancel,\n      tabIndex: getTabIndex(tabIndex, disabled),\n      ref: function (ref) {\n        return _this._uploadNavigation = ref;\n      }\n    }, others));\n  };\n  /**\n   * @hidden\n   */\n\n\n  Upload.defaultProps = {\n    autoUpload: true,\n    batch: false,\n    removeField: 'fileNames',\n    removeHeaders: {},\n    removeMethod: 'POST',\n    removeUrl: '',\n    responseType: 'json',\n    saveField: 'files',\n    saveHeaders: {},\n    saveMethod: 'POST',\n    saveUrl: '',\n    withCredentials: true,\n    restrictions: {\n      allowedExtensions: [],\n      maxFileSize: 0,\n      minFileSize: 0\n    },\n    multiple: true,\n    showFileList: true,\n    showActionButtons: true,\n    actionsLayout: 'end',\n    disabled: false\n  };\n  /**\n   * @hidden\n   */\n\n  Upload.propTypes = {\n    autoUpload: PropTypes.bool,\n    batch: PropTypes.bool,\n    withCredentials: PropTypes.bool,\n    saveField: PropTypes.string,\n    saveHeaders: PropTypes.object,\n    saveMethod: PropTypes.string,\n    saveUrl: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    responseType: PropTypes.oneOf(['arraybuffer', 'blob', 'json', 'text']),\n    removeField: PropTypes.string,\n    removeHeaders: PropTypes.object,\n    removeMethod: PropTypes.string,\n    removeUrl: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    multiple: PropTypes.bool,\n    disabled: PropTypes.bool,\n    showFileList: PropTypes.bool,\n    showActionButtons: PropTypes.bool,\n    actionsLayout: PropTypes.oneOf(['start', 'center', 'end', 'stretched']),\n    tabIndex: PropTypes.number,\n    accept: PropTypes.string,\n    listItemUI: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.shape({\n      render: PropTypes.func.isRequired\n    })]),\n    restrictions: PropTypes.shape({\n      allowedExtensions: PropTypes.arrayOf(PropTypes.string),\n      maxFileSize: PropTypes.number,\n      minFileSize: PropTypes.number\n    }),\n    files: PropTypes.arrayOf(PropTypes.shape({\n      uid: PropTypes.string,\n      name: PropTypes.string,\n      extension: PropTypes.string,\n      size: PropTypes.number,\n      validationErrors: PropTypes.arrayOf(PropTypes.string),\n      status: PropTypes.oneOf([UploadFileStatus.Initial, UploadFileStatus.RemoveFailed, UploadFileStatus.Removing, UploadFileStatus.Selected, UploadFileStatus.UploadFailed, UploadFileStatus.Uploaded, UploadFileStatus.Uploading]),\n      progress: PropTypes.number,\n      getRawFile: PropTypes.func\n    })),\n    defaultFiles: PropTypes.arrayOf(PropTypes.shape({\n      uid: PropTypes.string,\n      name: PropTypes.string,\n      extension: PropTypes.string,\n      size: PropTypes.number,\n      validationErrors: PropTypes.arrayOf(PropTypes.string),\n      status: PropTypes.oneOf([UploadFileStatus.Initial, UploadFileStatus.RemoveFailed, UploadFileStatus.Removing, UploadFileStatus.Selected, UploadFileStatus.UploadFailed, UploadFileStatus.Uploaded, UploadFileStatus.Uploading]),\n      progress: PropTypes.number,\n      getRawFile: PropTypes.func\n    }))\n  };\n  return Upload;\n}(React.Component);\n\nexport { Upload };","map":{"version":3,"sources":["../../src/Upload.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { getTabIndex } from '@progress/kendo-react-common';\nimport { UploadFileStatus } from './interfaces/UploadFileStatus';\nimport { UploadNavigation } from './UploadNavigation';\nimport axios from 'axios';\nimport utils from './utils/utils';\nimport stateUtils from './utils/stateUtils';\nimport connectionUtils from './utils/connectionUtils';\nimport validationUtils from './utils/validationUtils';\nimport { validatePackage } from '@progress/kendo-licensing';\nimport { packageMetadata } from './package-metadata';\nvar Upload = /** @class */ (function (_super) {\n    __extends(Upload, _super);\n    function Upload(props) {\n        var _this = _super.call(this, props) || this;\n        _this._httpSubscriptions = {};\n        /**\n         * @hidden\n         */\n        _this.focus = function () {\n            if (_this._uploadNavigation) {\n                _this._uploadNavigation.focus();\n            }\n        };\n        /**\n         * @hidden\n         */\n        _this.uploadFiles = function (filesForUpload) {\n            var async = _this.async;\n            stateUtils.setFilesStatus(filesForUpload, UploadFileStatus.Uploading);\n            stateUtils.groupForEach(filesForUpload, function (currentFiles, uid) {\n                var headers = connectionUtils.cloneRequestHeaders(async.saveHeaders || {});\n                var additionalData = {};\n                var eventData = {\n                    target: _this,\n                    files: currentFiles,\n                    headers: headers,\n                    additionalData: additionalData\n                };\n                if (_this.props.onBeforeUpload) {\n                    _this.props.onBeforeUpload.call(undefined, eventData);\n                }\n                var requestOptions = connectionUtils.populateRequestOptions(eventData.headers, _this.async);\n                var formData = connectionUtils.populateUploadFormData(currentFiles, async.saveField, eventData.additionalData);\n                if (_this.isCustomSave) {\n                    _this.props.saveUrl(currentFiles, { formData: formData, requestOptions: requestOptions }, _this.onUploadProgress)\n                        .then(function (event) { return _this.onUploadSuccess(event.uid); })\n                        .catch(function (event) { return _this.onUploadError(event.uid); });\n                }\n                else {\n                    var cancelTokenSource = axios.CancelToken.source();\n                    _this._httpSubscriptions[uid] = cancelTokenSource;\n                    axios(__assign({ method: async.saveMethod, url: async.saveUrl, data: formData, cancelToken: cancelTokenSource.token }, requestOptions, { onUploadProgress: function (event) { return _this.onUploadProgress(uid, event); } }))\n                        .then(function (event) { return _this.onUploadSuccess(uid, event); })\n                        .catch(function (event) { return _this.onUploadError(uid, event); });\n                }\n            });\n        };\n        /**\n         * @hidden\n         */\n        _this.removeFiles = function (filesForRemove) {\n            var async = _this.async;\n            stateUtils.groupForEach(filesForRemove, function (currentFiles, uid) {\n                var headers = connectionUtils.cloneRequestHeaders(async.removeHeaders || {});\n                var additionalData = {};\n                var eventData = {\n                    target: _this,\n                    files: currentFiles,\n                    headers: headers,\n                    additionalData: additionalData\n                };\n                if (_this.props.onBeforeRemove) {\n                    _this.props.onBeforeRemove.call(undefined, eventData);\n                }\n                var fileNames = currentFiles.map(function (file) { return file.name; });\n                var requestOptions = connectionUtils.populateRequestOptions(eventData.headers, _this.async);\n                var formData = connectionUtils.populateRemoveFormData(fileNames, async.removeField, eventData.additionalData);\n                if (_this.isCustomRemove) {\n                    _this.props.removeUrl(currentFiles, { formData: formData, requestOptions: requestOptions })\n                        .then(function (event) { return _this.onRemoveSuccess(event.uid); })\n                        .catch(function (event) { return _this.onRemoveError(event.uid); });\n                }\n                else {\n                    axios(__assign({ method: async.removeMethod, url: async.removeUrl, data: formData }, requestOptions))\n                        .then(function (event) { return _this.onRemoveSuccess(uid, event); })\n                        .catch(function (event) { return _this.onRemoveError(uid, event); });\n                }\n            });\n        };\n        /**\n         * @hidden\n         */\n        _this.onUpload = function () {\n            var newState = _this.fileStateCopy;\n            var groupedFiles = stateUtils.groupFilesByUid(newState);\n            var filesForUpload = stateUtils.filesForUpload(groupedFiles);\n            _this.uploadFiles(filesForUpload);\n            var onStatusChangeEvent = function () {\n                if (_this.props.onStatusChange) {\n                    var eventData = {\n                        target: _this,\n                        newState: newState,\n                        affectedFiles: stateUtils.flatFileGroup(filesForUpload)\n                    };\n                    _this.props.onStatusChange.call(undefined, eventData);\n                }\n            };\n            if (_this.isControlled) {\n                onStatusChangeEvent();\n            }\n            else {\n                _this.setState({ files: newState }, onStatusChangeEvent);\n            }\n        };\n        /**\n         * @hidden\n         */\n        _this.onAdd = function (files) {\n            // The problem when removing rawFile is that there is no reliable way of preserving it internally.\n            // For example, uid + filename - the filename can be changed at any moment.\n            var selectedFiles = utils.getAllFileInfo(files);\n            var newState;\n            selectedFiles = utils.assignGuidToFiles(selectedFiles, _this.async.batch);\n            validationUtils.validateFiles(selectedFiles, _this.props.restrictions);\n            if (!_this.props.multiple) {\n                newState = [];\n            }\n            else {\n                newState = _this.fileStateCopy;\n            }\n            stateUtils.addMany(selectedFiles, newState);\n            if (_this.async.autoUpload) {\n                var groupedFiles = stateUtils.groupFilesByUid(newState);\n                _this.uploadFiles(stateUtils.filesForUpload(groupedFiles));\n            }\n            var onAddEvent = function () {\n                if (_this.props.onAdd) {\n                    var eventData = {\n                        target: _this,\n                        newState: newState,\n                        affectedFiles: selectedFiles\n                    };\n                    _this.props.onAdd.call(undefined, eventData);\n                }\n            };\n            if (_this.isControlled) {\n                onAddEvent();\n            }\n            else {\n                _this.setState({ files: newState }, onAddEvent);\n            }\n        };\n        /**\n         * @hidden\n         */\n        _this.onUploadProgress = function (uid, event) {\n            var percentComplete = Math.round(100 * event.loaded / event.total) || 0;\n            var newState = _this.fileStateCopy;\n            var filesWithProgress = newState.filter(function (file) { return file.uid === uid; });\n            if (!filesWithProgress.length) {\n                return;\n            }\n            filesWithProgress.forEach(function (file) {\n                file.progress = percentComplete;\n            });\n            var onProgressEvent = function () {\n                if (_this.props.onProgress) {\n                    var eventData = {\n                        target: _this,\n                        newState: newState,\n                        affectedFiles: filesWithProgress\n                    };\n                    _this.props.onProgress.call(undefined, eventData);\n                }\n            };\n            if (_this.isControlled) {\n                onProgressEvent();\n            }\n            else {\n                _this.setState({ files: newState }, onProgressEvent);\n            }\n        };\n        /**\n         * @hidden\n         */\n        _this.onUploadSuccess = function (uid, event) {\n            var newState = _this.fileStateCopy;\n            var successFiles = newState.filter(function (file) { return file.uid === uid; });\n            successFiles.forEach(function (file) {\n                file.status = UploadFileStatus.Uploaded;\n            });\n            delete _this._httpSubscriptions[uid];\n            var onStatusChangeEvent = function () {\n                if (_this.props.onStatusChange) {\n                    var eventData = {\n                        target: _this,\n                        newState: newState,\n                        affectedFiles: successFiles,\n                        response: event ? connectionUtils.convertAxiosResponse(event) : undefined\n                    };\n                    _this.props.onStatusChange.call(undefined, eventData);\n                }\n            };\n            if (_this.isControlled) {\n                onStatusChangeEvent();\n            }\n            else {\n                _this.setState({ files: newState }, onStatusChangeEvent);\n            }\n        };\n        /**\n         * @hidden\n         */\n        _this.onUploadError = function (uid, event) {\n            var newState = _this.fileStateCopy;\n            var failedFiles = newState.filter(function (file) { return file.uid === uid; });\n            failedFiles.forEach(function (file) {\n                file.status = UploadFileStatus.UploadFailed;\n            });\n            delete _this._httpSubscriptions[uid];\n            if (!failedFiles.length) {\n                return;\n            }\n            var onStatusChangeEvent = function () {\n                if (_this.props.onStatusChange) {\n                    var eventData = {\n                        target: _this,\n                        newState: newState,\n                        affectedFiles: failedFiles,\n                        response: event ? connectionUtils.convertAxiosResponse(event) : undefined\n                    };\n                    _this.props.onStatusChange.call(undefined, eventData);\n                }\n            };\n            if (_this.isControlled) {\n                onStatusChangeEvent();\n            }\n            else {\n                _this.setState({ files: newState }, onStatusChangeEvent);\n            }\n        };\n        /**\n         * @hidden\n         */\n        _this.onRemove = function (uid) {\n            var _a;\n            var newState = _this.fileStateCopy;\n            var filesForRemove = newState.filter(function (file) { return file.uid === uid; });\n            var filesToKeep = newState.filter(function (file) { return file.uid !== uid; });\n            var remoteRemoveStatuses = [\n                UploadFileStatus.Uploaded,\n                UploadFileStatus.Initial,\n                UploadFileStatus.RemoveFailed\n            ];\n            if (remoteRemoveStatuses.indexOf(filesForRemove[0].status) > -1) {\n                var fileGroup = (_a = {},\n                    _a[uid] = filesForRemove,\n                    _a);\n                stateUtils.setFilesStatus(fileGroup, UploadFileStatus.Removing);\n                _this.removeFiles(fileGroup);\n                var onStatusChangeEvent = function () {\n                    if (_this.props.onStatusChange) {\n                        var eventData = {\n                            target: _this,\n                            newState: newState,\n                            affectedFiles: filesForRemove\n                        };\n                        _this.props.onStatusChange.call(undefined, eventData);\n                    }\n                };\n                if (_this.isControlled) {\n                    onStatusChangeEvent();\n                }\n                else {\n                    _this.setState({ files: newState }, onStatusChangeEvent);\n                }\n            }\n            else {\n                var onRemoveEvent = function () {\n                    if (_this.props.onRemove) {\n                        var eventData = {\n                            target: _this,\n                            newState: filesToKeep,\n                            affectedFiles: filesForRemove\n                        };\n                        _this.props.onRemove.call(undefined, eventData);\n                    }\n                };\n                if (_this.isControlled) {\n                    onRemoveEvent();\n                }\n                else {\n                    _this.setState({ files: filesToKeep }, onRemoveEvent);\n                }\n            }\n        };\n        /**\n         * @hidden\n         */\n        _this.onRemoveSuccess = function (uid, event) {\n            var newState = _this.fileStateCopy;\n            var filesForRemove = newState.filter(function (file) { return file.uid === uid; });\n            var filesToKeep = newState.filter(function (file) { return file.uid !== uid; });\n            var onRemoveEvent = function () {\n                if (_this.props.onRemove) {\n                    var eventData = {\n                        target: _this,\n                        newState: filesToKeep,\n                        affectedFiles: filesForRemove,\n                        response: event ? connectionUtils.convertAxiosResponse(event) : undefined\n                    };\n                    _this.props.onRemove.call(undefined, eventData);\n                }\n            };\n            if (_this.isControlled) {\n                onRemoveEvent();\n            }\n            else {\n                _this.setState({ files: filesToKeep }, onRemoveEvent);\n            }\n        };\n        /**\n         * @hidden\n         */\n        _this.onRemoveError = function (uid, event) {\n            var newState = _this.fileStateCopy;\n            var failedFiles = newState.filter(function (file) { return file.uid === uid; });\n            failedFiles.forEach(function (file) {\n                file.status = UploadFileStatus.RemoveFailed;\n            });\n            var onStatusChangeEvent = function () {\n                if (_this.props.onStatusChange) {\n                    var eventData = {\n                        target: _this,\n                        newState: newState,\n                        affectedFiles: failedFiles,\n                        response: event ? connectionUtils.convertAxiosResponse(event) : undefined\n                    };\n                    _this.props.onStatusChange.call(undefined, eventData);\n                }\n            };\n            if (_this.isControlled) {\n                onStatusChangeEvent();\n            }\n            else {\n                _this.setState({ files: newState }, onStatusChangeEvent);\n            }\n        };\n        /**\n         * @hidden\n         */\n        _this.onRetry = function (uid) {\n            var newState = _this.fileStateCopy;\n            var filesForRetry = stateUtils.groupFilesByUid(newState.filter(function (file) { return file.uid === uid; }));\n            stateUtils.setFilesStatus(filesForRetry, UploadFileStatus.Uploading);\n            _this.uploadFiles(filesForRetry);\n            var onStatusChangeEvent = function () {\n                if (_this.props.onStatusChange) {\n                    var eventData = {\n                        target: _this,\n                        newState: newState,\n                        affectedFiles: stateUtils.flatFileGroup(filesForRetry)\n                    };\n                    _this.props.onStatusChange.call(undefined, eventData);\n                }\n            };\n            if (_this.isControlled) {\n                onStatusChangeEvent();\n            }\n            else {\n                _this.setState({ files: newState }, onStatusChangeEvent);\n            }\n        };\n        /**\n         * @hidden\n         */\n        _this.onCancel = function (uid) {\n            var newState = _this.fileStateCopy;\n            var filesToKeep = newState.filter(function (file) { return file.uid !== uid; });\n            var filesForRemove = newState.filter(function (file) { return file.uid === uid; });\n            if (_this._httpSubscriptions[uid]) {\n                _this._httpSubscriptions[uid].cancel();\n                delete _this._httpSubscriptions[uid];\n            }\n            if (_this.props.onCancel) {\n                var eventData = {\n                    target: _this,\n                    uid: uid\n                };\n                _this.props.onCancel.call(undefined, eventData);\n            }\n            var onRemoveEvent = function () {\n                if (_this.props.onRemove) {\n                    var eventData = {\n                        target: _this,\n                        newState: filesToKeep,\n                        affectedFiles: filesForRemove\n                    };\n                    _this.props.onRemove.call(undefined, eventData);\n                }\n            };\n            if (_this.isControlled) {\n                onRemoveEvent();\n            }\n            else {\n                _this.setState({ files: filesToKeep }, onRemoveEvent);\n            }\n        };\n        /**\n         * @hidden\n         */\n        _this.onClear = function () {\n            if (!_this.files.length) {\n                return;\n            }\n            Object.keys(_this._httpSubscriptions).forEach(function (key) {\n                _this._httpSubscriptions[key].cancel();\n            });\n            _this._httpSubscriptions = {};\n            var onRemoveEvent = function () {\n                if (_this.props.onRemove) {\n                    var eventData = {\n                        target: _this,\n                        newState: [],\n                        affectedFiles: _this.fileStateCopy\n                    };\n                    _this.props.onRemove.call(undefined, eventData);\n                }\n            };\n            if (_this.isControlled) {\n                onRemoveEvent();\n            }\n            else {\n                _this.setState({ files: [] }, onRemoveEvent);\n            }\n        };\n        validatePackage(packageMetadata);\n        _this.state = {\n            files: props.defaultFiles || []\n        };\n        return _this;\n    }\n    Object.defineProperty(Upload.prototype, \"async\", {\n        get: function () {\n            var _a = this.props, autoUpload = _a.autoUpload, batch = _a.batch, removeField = _a.removeField, removeHeaders = _a.removeHeaders, removeMethod = _a.removeMethod, removeUrl = _a.removeUrl, responseType = _a.responseType, saveField = _a.saveField, saveHeaders = _a.saveHeaders, saveMethod = _a.saveMethod, saveUrl = _a.saveUrl, withCredentials = _a.withCredentials;\n            return {\n                autoUpload: autoUpload,\n                batch: batch,\n                removeField: removeField,\n                removeHeaders: removeHeaders,\n                removeMethod: removeMethod,\n                removeUrl: removeUrl,\n                responseType: responseType,\n                saveField: saveField,\n                saveHeaders: saveHeaders,\n                saveMethod: saveMethod,\n                saveUrl: saveUrl,\n                withCredentials: withCredentials\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Upload.prototype, \"files\", {\n        get: function () {\n            var files = this.isControlled ? this.props.files : this.state.files;\n            return files || [];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Upload.prototype, \"isControlled\", {\n        get: function () {\n            return !this.props.defaultFiles;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Upload.prototype, \"isCustomSave\", {\n        get: function () {\n            return this.props.saveUrl && typeof this.props.saveUrl === 'function';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Upload.prototype, \"isCustomRemove\", {\n        get: function () {\n            return this.props.removeUrl && typeof this.props.removeUrl === 'function';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Upload.prototype, \"fileStateCopy\", {\n        get: function () {\n            if (this.isControlled) {\n                return stateUtils.copyState(this.props.files);\n            }\n            else {\n                return stateUtils.copyState(this.state.files);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Upload.prototype, \"actionElement\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            if (this._uploadNavigation) {\n                return this._uploadNavigation.actionElement;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @hidden\n     */\n    Upload.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, showFileList = _a.showFileList, onAdd = _a.onAdd, onRemove = _a.onRemove, onCancel = _a.onCancel, autoUpload = _a.autoUpload, showActionButtons = _a.showActionButtons, actionsLayout = _a.actionsLayout, tabIndex = _a.tabIndex, disabled = _a.disabled, others = __rest(_a, [\"showFileList\", \"onAdd\", \"onRemove\", \"onCancel\", \"autoUpload\", \"showActionButtons\", \"actionsLayout\", \"tabIndex\", \"disabled\"]);\n        var groupedFiles = stateUtils.groupFilesByUid(this.files);\n        var filesForUpload = stateUtils.filesForUpload(groupedFiles);\n        return (React.createElement(UploadNavigation, __assign({ groupedFiles: groupedFiles, className: this.props.className, showFileList: showFileList && !!Object.keys(groupedFiles).length, showActionButtons: showActionButtons && !autoUpload && !!Object.keys(filesForUpload).length, actionsLayout: actionsLayout, autoUpload: autoUpload, disabled: disabled, onAdd: this.onAdd, onRemove: this.onRemove, onClear: this.onClear, onUpload: this.onUpload, onRetry: this.onRetry, onCancel: this.onCancel, tabIndex: getTabIndex(tabIndex, disabled), ref: function (ref) { return _this._uploadNavigation = ref; } }, others)));\n    };\n    /**\n     * @hidden\n     */\n    Upload.defaultProps = {\n        autoUpload: true,\n        batch: false,\n        removeField: 'fileNames',\n        removeHeaders: {},\n        removeMethod: 'POST',\n        removeUrl: '',\n        responseType: 'json',\n        saveField: 'files',\n        saveHeaders: {},\n        saveMethod: 'POST',\n        saveUrl: '',\n        withCredentials: true,\n        restrictions: {\n            allowedExtensions: [],\n            maxFileSize: 0,\n            minFileSize: 0\n        },\n        multiple: true,\n        showFileList: true,\n        showActionButtons: true,\n        actionsLayout: 'end',\n        disabled: false\n    };\n    /**\n     * @hidden\n     */\n    Upload.propTypes = {\n        autoUpload: PropTypes.bool,\n        batch: PropTypes.bool,\n        withCredentials: PropTypes.bool,\n        saveField: PropTypes.string,\n        saveHeaders: PropTypes.object,\n        saveMethod: PropTypes.string,\n        saveUrl: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n        responseType: PropTypes.oneOf(['arraybuffer', 'blob', 'json', 'text']),\n        removeField: PropTypes.string,\n        removeHeaders: PropTypes.object,\n        removeMethod: PropTypes.string,\n        removeUrl: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n        multiple: PropTypes.bool,\n        disabled: PropTypes.bool,\n        showFileList: PropTypes.bool,\n        showActionButtons: PropTypes.bool,\n        actionsLayout: PropTypes.oneOf(['start', 'center', 'end', 'stretched']),\n        tabIndex: PropTypes.number,\n        accept: PropTypes.string,\n        listItemUI: PropTypes.oneOfType([\n            PropTypes.func,\n            PropTypes.string,\n            PropTypes.shape({ render: PropTypes.func.isRequired })\n        ]),\n        restrictions: PropTypes.shape({\n            allowedExtensions: PropTypes.arrayOf(PropTypes.string),\n            maxFileSize: PropTypes.number,\n            minFileSize: PropTypes.number\n        }),\n        files: PropTypes.arrayOf(PropTypes.shape({\n            uid: PropTypes.string,\n            name: PropTypes.string,\n            extension: PropTypes.string,\n            size: PropTypes.number,\n            validationErrors: PropTypes.arrayOf(PropTypes.string),\n            status: PropTypes.oneOf([\n                UploadFileStatus.Initial,\n                UploadFileStatus.RemoveFailed,\n                UploadFileStatus.Removing,\n                UploadFileStatus.Selected,\n                UploadFileStatus.UploadFailed,\n                UploadFileStatus.Uploaded,\n                UploadFileStatus.Uploading\n            ]),\n            progress: PropTypes.number,\n            getRawFile: PropTypes.func\n        })),\n        defaultFiles: PropTypes.arrayOf(PropTypes.shape({\n            uid: PropTypes.string,\n            name: PropTypes.string,\n            extension: PropTypes.string,\n            size: PropTypes.number,\n            validationErrors: PropTypes.arrayOf(PropTypes.string),\n            status: PropTypes.oneOf([\n                UploadFileStatus.Initial,\n                UploadFileStatus.RemoveFailed,\n                UploadFileStatus.Removing,\n                UploadFileStatus.Selected,\n                UploadFileStatus.UploadFailed,\n                UploadFileStatus.Uploaded,\n                UploadFileStatus.Uploading\n            ]),\n            progress: PropTypes.number,\n            getRawFile: PropTypes.func\n        }))\n    };\n    return Upload;\n}(React.Component));\nexport { Upload };\n//# sourceMappingURL=Upload.js.map"]},"metadata":{},"sourceType":"module"}