{"ast":null,"code":"import { filterBy } from \"@progress/kendo-react-data-tools\";\nimport { mapTree, extendDataItem } from \"@progress/kendo-react-common\";\nexport const processTreeData = (data, state, fields) => {\n  const {\n    selectField,\n    expandField,\n    dataItemKey,\n    subItemsField\n  } = fields;\n  const {\n    expanded,\n    value,\n    filter\n  } = state;\n  const filtering = Boolean(filter && filter.value);\n  return mapTree(filtering ? filterBy(data, [filter], subItemsField) : data, subItemsField, item => {\n    const props = {\n      [expandField]: expanded.includes(item[dataItemKey]),\n      [selectField]: value && item[dataItemKey] === value[dataItemKey]\n    };\n    return filtering ? extendDataItem(item, subItemsField, props) : { ...item,\n      ...props\n    };\n  });\n};\nexport const expandedState = (item, dataItemKey, expanded) => {\n  const nextExpanded = expanded.slice();\n  const itemKey = item[dataItemKey];\n  const index = expanded.indexOf(itemKey);\n  index === -1 ? nextExpanded.push(itemKey) : nextExpanded.splice(index, 1);\n  return nextExpanded;\n};","map":{"version":3,"sources":["C:/Users/Shubhang/Desktop/portal/Code/Form/src/app/tree-data-operations.js"],"names":["filterBy","mapTree","extendDataItem","processTreeData","data","state","fields","selectField","expandField","dataItemKey","subItemsField","expanded","value","filter","filtering","Boolean","item","props","includes","expandedState","nextExpanded","slice","itemKey","index","indexOf","push","splice"],"mappings":"AAAA,SAASA,QAAT,QAAyB,kCAAzB;AACA,SAASC,OAAT,EAAkBC,cAAlB,QAAwC,8BAAxC;AAEA,OAAO,MAAMC,eAAe,GAAG,CAACC,IAAD,EAAOC,KAAP,EAAcC,MAAd,KAAyB;AACtD,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,WAAf;AAA4BC,IAAAA,WAA5B;AAAyCC,IAAAA;AAAzC,MAA2DJ,MAAjE;AACA,QAAM;AAAEK,IAAAA,QAAF;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA;AAAnB,MAA8BR,KAApC;AACA,QAAMS,SAAS,GAAGC,OAAO,CAACF,MAAM,IAAIA,MAAM,CAACD,KAAlB,CAAzB;AAEA,SAAOX,OAAO,CACZa,SAAS,GAAGd,QAAQ,CAACI,IAAD,EAAO,CAACS,MAAD,CAAP,EAAiBH,aAAjB,CAAX,GAA6CN,IAD1C,EAEZM,aAFY,EAGZM,IAAI,IAAI;AACN,UAAMC,KAAK,GAAG;AACZ,OAACT,WAAD,GAAeG,QAAQ,CAACO,QAAT,CAAkBF,IAAI,CAACP,WAAD,CAAtB,CADH;AAEZ,OAACF,WAAD,GAAeK,KAAK,IAAII,IAAI,CAACP,WAAD,CAAJ,KAAsBG,KAAK,CAACH,WAAD;AAFvC,KAAd;AAIA,WAAOK,SAAS,GACZZ,cAAc,CAACc,IAAD,EAAON,aAAP,EAAsBO,KAAtB,CADF,GAEZ,EAAE,GAAGD,IAAL;AAAW,SAAGC;AAAd,KAFJ;AAGD,GAXW,CAAd;AAaD,CAlBM;AAoBP,OAAO,MAAME,aAAa,GAAG,CAACH,IAAD,EAAOP,WAAP,EAAoBE,QAApB,KAAiC;AAC5D,QAAMS,YAAY,GAAGT,QAAQ,CAACU,KAAT,EAArB;AACA,QAAMC,OAAO,GAAGN,IAAI,CAACP,WAAD,CAApB;AACA,QAAMc,KAAK,GAAGZ,QAAQ,CAACa,OAAT,CAAiBF,OAAjB,CAAd;AACAC,EAAAA,KAAK,KAAK,CAAC,CAAX,GAAeH,YAAY,CAACK,IAAb,CAAkBH,OAAlB,CAAf,GAA4CF,YAAY,CAACM,MAAb,CAAoBH,KAApB,EAA2B,CAA3B,CAA5C;AAEA,SAAOH,YAAP;AACD,CAPM","sourcesContent":["import { filterBy } from \"@progress/kendo-react-data-tools\";\r\nimport { mapTree, extendDataItem } from \"@progress/kendo-react-common\";\r\n\r\nexport const processTreeData = (data, state, fields) => {\r\n  const { selectField, expandField, dataItemKey, subItemsField } = fields;\r\n  const { expanded, value, filter } = state;\r\n  const filtering = Boolean(filter && filter.value);\r\n\r\n  return mapTree(\r\n    filtering ? filterBy(data, [filter], subItemsField) : data,\r\n    subItemsField,\r\n    item => {\r\n      const props = {\r\n        [expandField]: expanded.includes(item[dataItemKey]),\r\n        [selectField]: value && item[dataItemKey] === value[dataItemKey]\r\n      };\r\n      return filtering\r\n        ? extendDataItem(item, subItemsField, props)\r\n        : { ...item, ...props };\r\n    }\r\n  );\r\n};\r\n\r\nexport const expandedState = (item, dataItemKey, expanded) => {\r\n  const nextExpanded = expanded.slice();\r\n  const itemKey = item[dataItemKey];\r\n  const index = expanded.indexOf(itemKey);\r\n  index === -1 ? nextExpanded.push(itemKey) : nextExpanded.splice(index, 1);\r\n\r\n  return nextExpanded;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}