{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  return t;\n};\n\nimport * as React from 'react';\nimport { classNames } from '@progress/kendo-react-common';\nimport utils from './utils/utils';\nimport { provideLocalizationService, registerForLocalization } from '@progress/kendo-react-intl';\nimport { messages, total, files as filesM, statusUploadFailed, statusUploaded } from './messages';\nimport { UploadListActionButton } from './UploadListActionButton';\n/**\n * @hidden\n */\n\nvar UploadListMultiItem =\n/** @class */\nfunction (_super) {\n  __extends(UploadListMultiItem, _super);\n\n  function UploadListMultiItem() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\n     * @hidden\n     */\n\n\n    _this.mapFiles = function () {\n      var files = _this.props.files;\n      return files.map(function (file) {\n        return React.createElement(\"span\", {\n          key: file.name,\n          className: 'k-file-name-size-wrapper'\n        }, React.createElement(\"span\", {\n          className: 'k-file-name',\n          title: file.name\n        }, file.name), utils.fileHasValidationErrors(file) ? React.createElement(\"span\", {\n          className: 'k-file-validation-message k-text-error'\n        }, _this.getFileValidationMessage(file)) : React.createElement(\"span\", {\n          key: file.name + \"-size\",\n          className: 'k-file-size'\n        }, utils.getTotalFilesSizeMessage([file])));\n      });\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.progress = function () {\n      var files = _this.props.files;\n      var sum = 0;\n      files.forEach(function (file) {\n        sum += file.progress || 0;\n      });\n      return sum / files.length;\n    };\n\n    return _this;\n  }\n  /**\n   * @hidden\n   */\n\n\n  UploadListMultiItem.prototype.getFileValidationMessage = function (file) {\n    var localizationService = provideLocalizationService(this);\n    var validationMessage = '';\n\n    if (file.validationErrors && file.validationErrors.length > 0) {\n      var messageKey = \"upload.\" + file.validationErrors[0];\n      validationMessage = localizationService.toLanguageString(messageKey, messages[messageKey]);\n    }\n\n    return validationMessage;\n  };\n\n  UploadListMultiItem.prototype.render = function () {\n    var _a = this.props,\n        files = _a.files,\n        others = __rest(_a, [\"files\"]);\n\n    var itemClassName = classNames('k-file-multiple');\n\n    var _b = utils.getFileStatus(files),\n        isUploaded = _b[1],\n        isUploadFailed = _b[2],\n        isUploadValidationFailed = _b[3];\n\n    var localizationService = provideLocalizationService(this);\n    var totalMessage = localizationService.toLanguageString(total, messages[total]);\n    var filesMessage = localizationService.toLanguageString(filesM, messages[filesM]);\n    var uploadFailedMessage = localizationService.toLanguageString(statusUploadFailed, messages[statusUploadFailed]);\n    var successMessage = localizationService.toLanguageString(statusUploaded, messages[statusUploaded]);\n    var progress = this.progress();\n    var showProgressBar = !isUploadValidationFailed && !isUploaded && !isUploadFailed;\n    return React.createElement(\"div\", {\n      className: itemClassName\n    }, React.createElement(\"div\", {\n      className: 'k-progressbar',\n      style: {\n        transition: 'opacity 1s ease-in-out',\n        opacity: showProgressBar ? 1 : 0\n      }\n    }, React.createElement(\"span\", {\n      className: 'k-progress',\n      style: {\n        width: (progress || 0) + '%'\n      }\n    })), React.createElement(\"span\", {\n      className: 'k-multiple-files-group-wrapper'\n    }, React.createElement(\"span\", {\n      className: 'k-file-group k-icon k-i-copy'\n    })), React.createElement(\"span\", {\n      className: \"k-multiple-files-wrapper\"\n    }, this.mapFiles(), !isUploadFailed ? progress !== 100 ? React.createElement(\"span\", {\n      className: 'k-file-information'\n    }, totalMessage + \": \" + files.length + \" \" + filesMessage + \", \" + utils.getTotalFilesSizeMessage(files)) : React.createElement(\"span\", {\n      className: 'k-file-information k-text-success'\n    }, files.length + \" \" + successMessage) : React.createElement(\"span\", {\n      className: 'k-file-validation-message k-text-error'\n    }, files.length + \" \" + uploadFailedMessage)), React.createElement(UploadListActionButton, __assign({\n      uid: files[0].uid,\n      status: files[0].status,\n      progress: progress\n    }, others)));\n  };\n\n  return UploadListMultiItem;\n}(React.Component);\n\nexport { UploadListMultiItem };\nregisterForLocalization(UploadListMultiItem);","map":{"version":3,"sources":["../../src/UploadListMultiItem.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport * as React from 'react';\nimport { classNames } from '@progress/kendo-react-common';\nimport utils from './utils/utils';\nimport { provideLocalizationService, registerForLocalization } from '@progress/kendo-react-intl';\nimport { messages, total, files as filesM, statusUploadFailed, statusUploaded } from './messages';\nimport { UploadListActionButton } from './UploadListActionButton';\n/**\n * @hidden\n */\nvar UploadListMultiItem = /** @class */ (function (_super) {\n    __extends(UploadListMultiItem, _super);\n    function UploadListMultiItem() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * @hidden\n         */\n        _this.mapFiles = function () {\n            var files = _this.props.files;\n            return files.map(function (file) {\n                return (React.createElement(\"span\", { key: file.name, className: 'k-file-name-size-wrapper' },\n                    React.createElement(\"span\", { className: 'k-file-name', title: file.name }, file.name),\n                    utils.fileHasValidationErrors(file) ?\n                        (React.createElement(\"span\", { className: 'k-file-validation-message k-text-error' }, _this.getFileValidationMessage(file))) :\n                        (React.createElement(\"span\", { key: file.name + \"-size\", className: 'k-file-size' }, utils.getTotalFilesSizeMessage([file])))));\n            });\n        };\n        /**\n         * @hidden\n         */\n        _this.progress = function () {\n            var files = _this.props.files;\n            var sum = 0;\n            files.forEach(function (file) {\n                sum += file.progress || 0;\n            });\n            return sum / files.length;\n        };\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    UploadListMultiItem.prototype.getFileValidationMessage = function (file) {\n        var localizationService = provideLocalizationService(this);\n        var validationMessage = '';\n        if (file.validationErrors && file.validationErrors.length > 0) {\n            var messageKey = \"upload.\" + file.validationErrors[0];\n            validationMessage = localizationService.toLanguageString(messageKey, messages[messageKey]);\n        }\n        return validationMessage;\n    };\n    UploadListMultiItem.prototype.render = function () {\n        var _a = this.props, files = _a.files, others = __rest(_a, [\"files\"]);\n        var itemClassName = classNames('k-file-multiple');\n        var _b = utils.getFileStatus(files), isUploaded = _b[1], isUploadFailed = _b[2], isUploadValidationFailed = _b[3];\n        var localizationService = provideLocalizationService(this);\n        var totalMessage = localizationService.toLanguageString(total, messages[total]);\n        var filesMessage = localizationService.toLanguageString(filesM, messages[filesM]);\n        var uploadFailedMessage = localizationService.toLanguageString(statusUploadFailed, messages[statusUploadFailed]);\n        var successMessage = localizationService.toLanguageString(statusUploaded, messages[statusUploaded]);\n        var progress = this.progress();\n        var showProgressBar = !isUploadValidationFailed && !isUploaded && !isUploadFailed;\n        return (React.createElement(\"div\", { className: itemClassName },\n            React.createElement(\"div\", { className: 'k-progressbar', style: {\n                    transition: 'opacity 1s ease-in-out',\n                    opacity: showProgressBar ? 1 : 0\n                } },\n                React.createElement(\"span\", { className: 'k-progress', style: { width: (progress || 0) + '%' } })),\n            React.createElement(\"span\", { className: 'k-multiple-files-group-wrapper' },\n                React.createElement(\"span\", { className: 'k-file-group k-icon k-i-copy' })),\n            React.createElement(\"span\", { className: \"k-multiple-files-wrapper\" },\n                this.mapFiles(),\n                !isUploadFailed ?\n                    (progress !== 100 ?\n                        (React.createElement(\"span\", { className: 'k-file-information' }, totalMessage + \": \" + files.length + \" \" + filesMessage + \", \" + utils.getTotalFilesSizeMessage(files))) :\n                        (React.createElement(\"span\", { className: 'k-file-information k-text-success' }, files.length + \" \" + successMessage))) :\n                    (React.createElement(\"span\", { className: 'k-file-validation-message k-text-error' }, files.length + \" \" + uploadFailedMessage))),\n            React.createElement(UploadListActionButton, __assign({ uid: files[0].uid, status: files[0].status, progress: progress }, others))));\n    };\n    return UploadListMultiItem;\n}(React.Component));\nexport { UploadListMultiItem };\nregisterForLocalization(UploadListMultiItem);\n//# sourceMappingURL=UploadListMultiItem.js.map"]},"metadata":{},"sourceType":"module"}