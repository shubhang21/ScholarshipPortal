{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport * as React from 'react';\nimport { classNames } from '@progress/kendo-react-common';\nimport { provideLocalizationService, registerForLocalization } from '@progress/kendo-react-intl';\nimport { messages, headerStatusUploading, headerStatusUploaded } from './messages';\n/**\n * @hidden\n */\n\nvar UploadStatus =\n/** @class */\nfunction (_super) {\n  __extends(UploadStatus, _super);\n\n  function UploadStatus() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  UploadStatus.prototype.render = function () {\n    var _a = this.props,\n        isUploading = _a.isUploading,\n        isUploaded = _a.isUploaded,\n        isUploadFailed = _a.isUploadFailed;\n    var className = classNames('k-upload-status', 'k-upload-status-total');\n    var statusClassName = classNames(!isUploading && !isUploadFailed && isUploaded ? 'k-i-checkmark' : '', !isUploading && isUploadFailed ? 'k-i-exception' : '', isUploading ? 'k-i-loading' : '', 'k-icon');\n    var statusText = '';\n    var localizationService = provideLocalizationService(this);\n\n    if (isUploading) {\n      statusText = localizationService.toLanguageString(headerStatusUploading, messages[headerStatusUploading]);\n    } else if (isUploaded || isUploadFailed) {\n      statusText = localizationService.toLanguageString(headerStatusUploaded, messages[headerStatusUploaded]);\n    }\n\n    return React.createElement(\"div\", {\n      className: className\n    }, React.createElement(\"span\", {\n      className: statusClassName\n    }), statusText);\n  };\n\n  return UploadStatus;\n}(React.Component);\n\nexport { UploadStatus };\nregisterForLocalization(UploadStatus);","map":{"version":3,"sources":["../../src/UploadStatus.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,UAAT,QAA2B,8BAA3B;AAEA,SAA8B,0BAA9B,EAA0D,uBAA1D,QAAyF,4BAAzF;AACA,SAAS,QAAT,EAAmB,qBAAnB,EAA0C,oBAA1C,QAAsE,YAAtE;AAWA;;AAEG;;AACH,IAAA,YAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAkC,EAAA,SAAA,CAAA,YAAA,EAAA,MAAA,CAAA;;AAAlC,WAAA,YAAA,GAAA;;AAgCC;;AA/BG,EAAA,YAAA,CAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AACU,QAAA,EAAA,GAAA,KAAA,KAAA;AAAA,QAAE,WAAA,GAAA,EAAA,CAAA,WAAF;AAAA,QAAe,UAAA,GAAA,EAAA,CAAA,UAAf;AAAA,QAA2B,cAAA,GAAA,EAAA,CAAA,cAA3B;AAEN,QAAM,SAAS,GAAG,UAAU,CACxB,iBADwB,EAExB,uBAFwB,CAA5B;AAIA,QAAM,eAAe,GAAG,UAAU,CAC9B,CAAC,WAAD,IAAgB,CAAC,cAAjB,IAAmC,UAAnC,GAAgD,eAAhD,GAAkE,EADpC,EAE9B,CAAC,WAAD,IAAgB,cAAhB,GAAiC,eAAjC,GAAmD,EAFrB,EAG9B,WAAW,GAAG,aAAH,GAAmB,EAHA,EAI9B,QAJ8B,CAAlC;AAMA,QAAI,UAAU,GAAG,EAAjB;AACA,QAAM,mBAAmB,GAAwB,0BAA0B,CAAC,IAAD,CAA3E;;AAEA,QAAI,WAAJ,EAAiB;AACb,MAAA,UAAU,GAAG,mBAAmB,CAC3B,gBADQ,CACS,qBADT,EACgC,QAAQ,CAAC,qBAAD,CADxC,CAAb;AAEH,KAHD,MAGO,IAAI,UAAU,IAAI,cAAlB,EAAkC;AACrC,MAAA,UAAU,GAAG,mBAAmB,CAC3B,gBADQ,CACS,oBADT,EAC+B,QAAQ,CAAC,oBAAD,CADvC,CAAb;AAEH;;AAED,WACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAE;AAAhB,KAAA,EACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,MAAA,SAAS,EAAE;AAAjB,KAAA,CADF,EAEG,UAFH,CADF;AAMH,GA9BD;;AA+BJ,SAAA,YAAA;AAAC,CAhCD,CAAkC,KAAK,CAAC,SAAxC,CAAA;;;AAkCA,uBAAuB,CAAC,YAAD,CAAvB","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as React from 'react';\nimport { classNames } from '@progress/kendo-react-common';\nimport { provideLocalizationService, registerForLocalization } from '@progress/kendo-react-intl';\nimport { messages, headerStatusUploading, headerStatusUploaded } from './messages';\n/**\n * @hidden\n */\nvar UploadStatus = /** @class */ (function (_super) {\n    __extends(UploadStatus, _super);\n    function UploadStatus() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    UploadStatus.prototype.render = function () {\n        var _a = this.props, isUploading = _a.isUploading, isUploaded = _a.isUploaded, isUploadFailed = _a.isUploadFailed;\n        var className = classNames('k-upload-status', 'k-upload-status-total');\n        var statusClassName = classNames(!isUploading && !isUploadFailed && isUploaded ? 'k-i-checkmark' : '', !isUploading && isUploadFailed ? 'k-i-exception' : '', isUploading ? 'k-i-loading' : '', 'k-icon');\n        var statusText = '';\n        var localizationService = provideLocalizationService(this);\n        if (isUploading) {\n            statusText = localizationService\n                .toLanguageString(headerStatusUploading, messages[headerStatusUploading]);\n        }\n        else if (isUploaded || isUploadFailed) {\n            statusText = localizationService\n                .toLanguageString(headerStatusUploaded, messages[headerStatusUploaded]);\n        }\n        return (React.createElement(\"div\", { className: className },\n            React.createElement(\"span\", { className: statusClassName }),\n            statusText));\n    };\n    return UploadStatus;\n}(React.Component));\nexport { UploadStatus };\nregisterForLocalization(UploadStatus);\n//# sourceMappingURL=UploadStatus.js.map"]},"metadata":{},"sourceType":"module"}