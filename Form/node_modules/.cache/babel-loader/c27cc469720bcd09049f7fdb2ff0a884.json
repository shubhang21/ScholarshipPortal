{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport * as React from 'react';\nimport { classNames } from '@progress/kendo-react-common';\nimport { UploadFileStatus } from './interfaces/UploadFileStatus';\nimport { provideLocalizationService, registerForLocalization } from '@progress/kendo-react-intl';\nimport { messages, cancel, retry, remove } from './messages';\n/**\n * @hidden\n */\n\nvar UploadListActionButton =\n/** @class */\nfunction (_super) {\n  __extends(UploadListActionButton, _super);\n\n  function UploadListActionButton(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.buttonClassNames = function (type) {\n      var _a = _this.state,\n          actionFocused = _a.actionFocused,\n          retryFocused = _a.retryFocused;\n      return classNames('k-button k-button-icon k-flat k-upload-action', _this.props.disabled ? 'k-state-disabled' : '', actionFocused && type === 'action' || retryFocused && type === 'retry' ? 'k-state-focused' : '');\n    };\n\n    _this.onRetryFocus = function () {\n      _this.setState({\n        retryFocused: true\n      });\n    };\n\n    _this.onRetryBlur = function () {\n      _this.setState({\n        retryFocused: false\n      });\n    };\n\n    _this.onActionFocus = function () {\n      _this.setState({\n        actionFocused: true\n      });\n    };\n\n    _this.onActionBlur = function () {\n      _this.setState({\n        actionFocused: false\n      });\n    };\n\n    _this.onActionClick = function () {\n      var _a = _this.props,\n          status = _a.status,\n          uid = _a.uid,\n          disabled = _a.disabled,\n          onCancel = _a.onCancel,\n          onRemove = _a.onRemove;\n\n      if (disabled || status === UploadFileStatus.Removing) {\n        return;\n      }\n\n      if (status === UploadFileStatus.Uploading) {\n        onCancel.call(undefined, uid);\n      } else {\n        onRemove.call(undefined, uid);\n      }\n    };\n\n    _this.onRetryClick = function () {\n      var _a = _this.props,\n          uid = _a.uid,\n          disabled = _a.disabled,\n          onRetry = _a.onRetry;\n\n      if (disabled) {\n        return;\n      }\n\n      onRetry.call(undefined, uid);\n    };\n\n    _this.state = {\n      retryFocused: false,\n      actionFocused: false\n    };\n    return _this;\n  }\n\n  UploadListActionButton.prototype.actionButtonTitle = function (status, localizationService) {\n    if (status === UploadFileStatus.Uploading) {\n      return localizationService.toLanguageString(cancel, messages[cancel]);\n    }\n\n    return localizationService.toLanguageString(remove, messages[remove]);\n  };\n\n  UploadListActionButton.prototype.retryButtonTitle = function (localizationService) {\n    return localizationService.toLanguageString(retry, messages[retry]);\n  };\n\n  UploadListActionButton.prototype.render = function () {\n    var _a = this.props,\n        status = _a.status,\n        progress = _a.progress;\n    var actionButtonClassNames = classNames('k-icon', status === UploadFileStatus.Uploading ? 'k-cancel k-i-deny' : '', status !== UploadFileStatus.Uploading ? 'k-delete k-i-x' : '');\n    var isRetryVisible = status === UploadFileStatus.UploadFailed;\n    var isProgressVisible = status === UploadFileStatus.Uploading;\n    var isActionHidden = (status === UploadFileStatus.Uploaded || status === UploadFileStatus.Initial) && !this.props.async.removeUrl;\n    var localizationService = provideLocalizationService(this);\n    var percent = '%';\n    return React.createElement(\"strong\", {\n      className: 'k-upload-status'\n    }, isProgressVisible ? React.createElement(\"span\", {\n      className: 'k-upload-pct'\n    }, progress, percent) : undefined, isRetryVisible ? React.createElement(\"button\", {\n      type: \"button\",\n      tabIndex: -1,\n      className: this.buttonClassNames('retry'),\n      onFocus: this.onRetryFocus,\n      onBlur: this.onRetryBlur,\n      onClick: this.onRetryClick\n    }, React.createElement(\"span\", {\n      \"aria-label\": this.retryButtonTitle(localizationService),\n      title: this.retryButtonTitle(localizationService),\n      className: 'k-icon k-retry k-i-refresh-sm'\n    })) : undefined, !isActionHidden ? React.createElement(\"button\", {\n      type: \"button\",\n      tabIndex: -1,\n      className: this.buttonClassNames('action'),\n      onFocus: this.onActionFocus,\n      onBlur: this.onActionBlur,\n      onClick: this.onActionClick\n    }, React.createElement(\"span\", {\n      \"aria-label\": this.actionButtonTitle(status, localizationService),\n      title: this.actionButtonTitle(status, localizationService),\n      className: actionButtonClassNames\n    })) : undefined);\n  };\n\n  return UploadListActionButton;\n}(React.Component);\n\nexport { UploadListActionButton };\nregisterForLocalization(UploadListActionButton);","map":{"version":3,"sources":["../../src/UploadListActionButton.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as React from 'react';\nimport { classNames } from '@progress/kendo-react-common';\nimport { UploadFileStatus } from './interfaces/UploadFileStatus';\nimport { provideLocalizationService, registerForLocalization } from '@progress/kendo-react-intl';\nimport { messages, cancel, retry, remove } from './messages';\n/**\n * @hidden\n */\nvar UploadListActionButton = /** @class */ (function (_super) {\n    __extends(UploadListActionButton, _super);\n    function UploadListActionButton(props) {\n        var _this = _super.call(this, props) || this;\n        _this.buttonClassNames = function (type) {\n            var _a = _this.state, actionFocused = _a.actionFocused, retryFocused = _a.retryFocused;\n            return classNames('k-button k-button-icon k-flat k-upload-action', _this.props.disabled ? 'k-state-disabled' : '', (actionFocused && type === 'action') || (retryFocused && type === 'retry') ? 'k-state-focused' : '');\n        };\n        _this.onRetryFocus = function () {\n            _this.setState({\n                retryFocused: true\n            });\n        };\n        _this.onRetryBlur = function () {\n            _this.setState({\n                retryFocused: false\n            });\n        };\n        _this.onActionFocus = function () {\n            _this.setState({\n                actionFocused: true\n            });\n        };\n        _this.onActionBlur = function () {\n            _this.setState({\n                actionFocused: false\n            });\n        };\n        _this.onActionClick = function () {\n            var _a = _this.props, status = _a.status, uid = _a.uid, disabled = _a.disabled, onCancel = _a.onCancel, onRemove = _a.onRemove;\n            if (disabled || status === UploadFileStatus.Removing) {\n                return;\n            }\n            if (status === UploadFileStatus.Uploading) {\n                onCancel.call(undefined, uid);\n            }\n            else {\n                onRemove.call(undefined, uid);\n            }\n        };\n        _this.onRetryClick = function () {\n            var _a = _this.props, uid = _a.uid, disabled = _a.disabled, onRetry = _a.onRetry;\n            if (disabled) {\n                return;\n            }\n            onRetry.call(undefined, uid);\n        };\n        _this.state = {\n            retryFocused: false,\n            actionFocused: false\n        };\n        return _this;\n    }\n    UploadListActionButton.prototype.actionButtonTitle = function (status, localizationService) {\n        if (status === UploadFileStatus.Uploading) {\n            return localizationService.toLanguageString(cancel, messages[cancel]);\n        }\n        return localizationService.toLanguageString(remove, messages[remove]);\n    };\n    UploadListActionButton.prototype.retryButtonTitle = function (localizationService) {\n        return localizationService.toLanguageString(retry, messages[retry]);\n    };\n    UploadListActionButton.prototype.render = function () {\n        var _a = this.props, status = _a.status, progress = _a.progress;\n        var actionButtonClassNames = classNames('k-icon', status === UploadFileStatus.Uploading ? 'k-cancel k-i-deny' : '', status !== UploadFileStatus.Uploading ? 'k-delete k-i-x' : '');\n        var isRetryVisible = status === UploadFileStatus.UploadFailed;\n        var isProgressVisible = status === UploadFileStatus.Uploading;\n        var isActionHidden = (status === UploadFileStatus.Uploaded || status === UploadFileStatus.Initial) &&\n            !this.props.async.removeUrl;\n        var localizationService = provideLocalizationService(this);\n        var percent = '%';\n        return (React.createElement(\"strong\", { className: 'k-upload-status' },\n            isProgressVisible ?\n                React.createElement(\"span\", { className: 'k-upload-pct' },\n                    progress,\n                    percent) :\n                undefined,\n            isRetryVisible ?\n                (React.createElement(\"button\", { type: \"button\", tabIndex: -1, className: this.buttonClassNames('retry'), onFocus: this.onRetryFocus, onBlur: this.onRetryBlur, onClick: this.onRetryClick },\n                    React.createElement(\"span\", { \"aria-label\": this.retryButtonTitle(localizationService), title: this.retryButtonTitle(localizationService), className: 'k-icon k-retry k-i-refresh-sm' }))) :\n                undefined,\n            !isActionHidden ?\n                (React.createElement(\"button\", { type: \"button\", tabIndex: -1, className: this.buttonClassNames('action'), onFocus: this.onActionFocus, onBlur: this.onActionBlur, onClick: this.onActionClick },\n                    React.createElement(\"span\", { \"aria-label\": this.actionButtonTitle(status, localizationService), title: this.actionButtonTitle(status, localizationService), className: actionButtonClassNames }))) :\n                undefined));\n    };\n    return UploadListActionButton;\n}(React.Component));\nexport { UploadListActionButton };\nregisterForLocalization(UploadListActionButton);\n//# sourceMappingURL=UploadListActionButton.js.map"]},"metadata":{},"sourceType":"module"}